{"ast":null,"code":"var _jsxFileName = \"/Users/minnalee/react-3d-model/src/App.js\";\nimport './App.css';\nimport * as THREE from 'three';\n\n// 附加組件 控制器與載入器\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n\n// 場景 相機 渲染器\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(\n//視野角度 寬高比 聚焦的近截面 聚焦的遠截面 \n75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n// 創建一個立方體物件在場景中 幾何物件 材質 網格\n// const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n// const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n// const cube = new THREE.Mesh( geometry, material );\n// scene.add( cube );\n\n// camera.position.z = 5;\n\n// 控制器與載入器\nconst controls = new OrbitControls(camera, renderer.domElement);\nconst loader = new GLTFLoader();\n\n// Load a glTF resource\nloader.load('./models/island.glb', function (gltf) {\n  scene.add(gltf.scene);\n\n  // gltf.animations; // Array<THREE.AnimationClip>\n  // gltf.scene; // THREE.Group\n  // gltf.scenes; // Array<THREE.Group>\n  // gltf.cameras; // Array<THREE.Camera>\n  // gltf.asset; // Object\n},\n// called while loading is progressing\nfunction (xhr) {\n  console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n}, function (error) {\n  console.log(error);\n});\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  // cube.rotation.x += 0.01;\n  // cube.rotation.y += 0.01;\n\n  renderer.render(scene, camera);\n}\nanimate();\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","OrbitControls","GLTFLoader","jsxDEV","_jsxDEV","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","controls","loader","load","gltf","add","xhr","console","log","loaded","total","error","animate","requestAnimationFrame","render","App","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minnalee/react-3d-model/src/App.js"],"sourcesContent":["import './App.css';\n\nimport * as THREE from 'three';\n\n// 附加組件 控制器與載入器\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n\n// 場景 相機 渲染器\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera( \n  //視野角度 寬高比 聚焦的近截面 聚焦的遠截面 \n  75, window.innerWidth / window.innerHeight, 0.1, 1000 \n);\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\n// 創建一個立方體物件在場景中 幾何物件 材質 網格\n// const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n// const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n// const cube = new THREE.Mesh( geometry, material );\n// scene.add( cube );\n\n// camera.position.z = 5;\n\n// 控制器與載入器\nconst controls = new OrbitControls( camera, renderer.domElement );\nconst loader = new GLTFLoader();\n\n// Load a glTF resource\nloader.load(\n\t'./models/island.glb',\n\tfunction ( gltf ) {\n\n\t\tscene.add( gltf.scene );\n\n\t\t// gltf.animations; // Array<THREE.AnimationClip>\n\t\t// gltf.scene; // THREE.Group\n\t\t// gltf.scenes; // Array<THREE.Group>\n\t\t// gltf.cameras; // Array<THREE.Camera>\n\t\t// gltf.asset; // Object\n\n\t},\n\t// called while loading is progressing\n\tfunction ( xhr ) {\n\n\t\tconsole.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n\n\t},\n\tfunction ( error ) {\n\t\tconsole.log( error );\n\t}\n);\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n\n\t// cube.rotation.x += 0.01;\n\t// cube.rotation.y += 0.01;\n\n\trenderer.render( scene, camera );\n}\n\nanimate();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAElB,OAAO,KAAKA,KAAK,MAAM,OAAO;;AAE9B;AACA,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,UAAU,QAAQ,oCAAoC;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,IAAIL,KAAK,CAACM,KAAK,CAAC,CAAC;AAC/B,MAAMC,MAAM,GAAG,IAAIP,KAAK,CAACQ,iBAAiB;AACxC;AACA,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IACnD,CAAC;AACD,MAAMC,QAAQ,GAAG,IAAIZ,KAAK,CAACa,aAAa,CAAC,CAAC;AAC1CD,QAAQ,CAACE,OAAO,CAAEL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAY,CAAC;AACzDI,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAEL,QAAQ,CAACM,UAAW,CAAC;;AAEhD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAMC,QAAQ,GAAG,IAAIlB,aAAa,CAAEM,MAAM,EAAEK,QAAQ,CAACM,UAAW,CAAC;AACjE,MAAME,MAAM,GAAG,IAAIlB,UAAU,CAAC,CAAC;;AAE/B;AACAkB,MAAM,CAACC,IAAI,CACV,qBAAqB,EACrB,UAAWC,IAAI,EAAG;EAEjBjB,KAAK,CAACkB,GAAG,CAAED,IAAI,CAACjB,KAAM,CAAC;;EAEvB;EACA;EACA;EACA;EACA;AAED,CAAC;AACD;AACA,UAAWmB,GAAG,EAAG;EAEhBC,OAAO,CAACC,GAAG,CAAIF,GAAG,CAACG,MAAM,GAAGH,GAAG,CAACI,KAAK,GAAG,GAAG,GAAK,UAAW,CAAC;AAE7D,CAAC,EACD,UAAWC,KAAK,EAAG;EAClBJ,OAAO,CAACC,GAAG,CAAEG,KAAM,CAAC;AACrB,CACD,CAAC;AAED,SAASC,OAAOA,CAAA,EAAG;EAClBC,qBAAqB,CAAED,OAAQ,CAAC;;EAEhC;EACA;;EAEAlB,QAAQ,CAACoB,MAAM,CAAE3B,KAAK,EAAEE,MAAO,CAAC;AACjC;AAEAuB,OAAO,CAAC,CAAC;AAET,SAASG,GAAGA,CAAA,EAAG;EACb,oBACE7B,OAAA;IAAK8B,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV;AAACC,EAAA,GANQN,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}